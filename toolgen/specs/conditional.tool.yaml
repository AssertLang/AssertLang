tool:
  id: conditional
  name: Conditional Tool
  summary: Evaluate simple conditions (==, !=, regex).
  category: control-flow
  version: v1

envelope:
  capabilities: false
  health: false
  streaming: false
  long_running: false

schema:
  shared_fields:
    - lang
  request:
    type: object
    properties:
      left:
        type: string
      op:
        type: string
        enum: ['==', '!=', 'regex']
      right:
        type: string
    required: [left, op, right]
    additionalProperties: false
  response:
    type: object
    properties:
      pass:
        type: boolean
    required: [pass]

operations:
  - id: compare
    summary: Compare two strings.
    example:
      request:
        left: abc
        op: ==
        right: abc
      response:
        pass: true

adapters:
  - language: python
    template: conditional_eval
    deps:
      python:
        requirements: []
  - language: node
    template: conditional_eval
    deps:
      node:
        packages: []
  - language: go
    template: conditional_eval
    deps:
      go:
        modules: []
  - language: rust
    template: conditional_eval
    deps:
      rust:
        crates: [regex]
  - language: dotnet
    template: conditional_eval
    deps:
      dotnet:
        packages: []

policy:
  network: deny
  filesystem: deny
  secrets: deny

telemetry:
  emit:
    - channel: tool.conditional
      fields: [op]

testing:
  cases:
    - description: equality
      request:
        left: a
        op: ==
        right: a
      expect:
        data.pass: True

marketplace:
  tags: [control]
  maturity: beta
