tool:
  id: logger
  name: Logger Tool
  summary: Structured logging sink with stdout forwarding.
  category: specialized
  version: v1

envelope:
  capabilities: false
  health: false
  streaming: true
  long_running: false

schema:
  shared_fields:
    - lang
    - adapter
    - runtime
    - limits
  request:
    type: object
    properties:
      level:
        type: string
        enum: [trace, debug, info, warn, error]
      message:
        type: string
      context:
        type: object
        additionalProperties: {}
    required: [message]
    additionalProperties: false
  response:
    type: object
    properties:
      logged:
        type: boolean
    required: [logged]

operations:
  - id: emit
    summary: Emit a structured log entry.
    example:
      request:
        level: info
        message: "job complete"
        context:
          task_id: ab12cd
      response:
        logged: true

adapters:
  - language: python
    template: stdout_logger
    deps:
      python:
        requirements: []
  - language: node
    template: stdout_logger
    deps:
      node:
        packages: []
  - language: go
    template: stdout_logger
    deps:
      go:
        modules: []

policy:
  network: deny
  filesystem: read
  secrets: deny
  retry:
    max_attempts: 1
  timeout_sec: 5

telemetry:
  emit:
    - channel: tool.logger
      fields: [level, message]

testing:
  cases:
    - description: Emits a default info log when level omitted.
      request:
        message: "hello"
      expect:
        data.logged: true

docs:
  quickstart: |
    The Logger tool emits structured logs to stdout and returns confirmation.
  examples:
    - title: Log a build completion
      code: |
        run_tool("logger", {"message": "build finished", "context": {"duration_ms": 812}})

marketplace:
  tags: [logging, observability]
  maturity: beta
