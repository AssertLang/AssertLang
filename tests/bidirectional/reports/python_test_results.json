{
  "start_time": 1759538081.2936919,
  "fixtures_dir": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/fixtures",
  "output_dir": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated",
  "fixtures_tested": 11,
  "fixtures_passed": 11,
  "fixtures_failed": 0,
  "test_results": [
    {
      "fixture": "nodejs_minimal.pw",
      "stages": {
        "parse": {
          "fixture": "nodejs_minimal.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='minimal-test-agent', lang='nodejs', port=20100, exposes=[ExposeBlock(verb='echo@v1', params=[{'name': 'message', 'type': 'string'}], returns=[{'name': 'echo', 'type': 'string'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=[], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "nodejs_minimal.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-test-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "nodejs_minimal.pw",
          "agent_name": "minimal-test-agent",
          "port": 20100,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-test-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-test-agent_server.py",
            "port": 20100,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_echo_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90294,
              "errors": [],
              "startup_time": 0.5134661197662354
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.284717,
                "timestamp": "2025-10-04T00:34:41.812279+00:00"
              },
              "errors": [],
              "response_time": 0.0022230148315429688
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "echo@v1",
                "params": {
                  "message": "test_message"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "message": "test_message"
                    },
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "minimal-test-agent",
                      "timestamp": "2025-10-03T20:34:41.814534",
                      "tools_executed": []
                    },
                    "echo": "echo_value"
                  }
                },
                "errors": [],
                "response_time": 0.0020439624786376953
              }
            ],
            "overall_passed": true,
            "total_duration": 0.6483070850372314,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "python_complex.pw",
      "stages": {
        "parse": {
          "fixture": "python_complex.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='complex-test-agent', lang='python', port=23472, exposes=[ExposeBlock(verb='task.create@v1', params=[{'name': 'title', 'type': 'string'}, {'name': 'description', 'type': 'string'}, {'name': 'priority', 'type': 'int'}], returns=[{'name': 'task_id', 'type': 'string'}, {'name': 'status', 'type': 'string'}, {'name': 'created_at', 'type': 'string'}], handler_code=None, prompt_template=None), ExposeBlock(verb='task.get@v1', params=[{'name': 'task_id', 'type': 'string'}], returns=[{'name': 'task_id', 'type': 'string'}, {'name': 'title', 'type': 'string'}, {'name': 'description', 'type': 'string'}, {'name': 'priority', 'type': 'int'}, {'name': 'status', 'type': 'string'}, {'name': 'created_at', 'type': 'string'}], handler_code=None, prompt_template=None), ExposeBlock(verb='task.update@v1', params=[{'name': 'task_id', 'type': 'string'}, {'name': 'status', 'type': 'string'}], returns=[{'name': 'task_id', 'type': 'string'}, {'name': 'status', 'type': 'string'}, {'name': 'updated_at', 'type': 'string'}], handler_code=None, prompt_template=None), ExposeBlock(verb='task.list@v1', params=[{'name': 'limit', 'type': 'int'}, {'name': 'offset', 'type': 'int'}], returns=[{'name': 'tasks', 'type': 'array'}, {'name': 'total', 'type': 'int'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=['http', 'storage', 'logger'], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "python_complex.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/complex-test-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "python_complex.pw",
          "agent_name": "complex-test-agent",
          "port": 23472,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/complex-test-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/complex-test-agent_server.py",
            "port": 23472,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_task_create_v1",
                "handle_task_get_v1",
                "handle_task_update_v1",
                "handle_task_list_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90310,
              "errors": [],
              "startup_time": 0.5114049911499023
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.349847,
                "timestamp": "2025-10-04T00:34:42.460093+00:00"
              },
              "errors": [],
              "response_time": 0.0010569095611572266
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "task.create@v1",
                "params": {
                  "title": "test_title",
                  "description": "test_description",
                  "priority": 42
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "title": "test_title",
                      "description": "test_description",
                      "priority": 42
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "title": "test_title",
                          "description": "test_description",
                          "priority": 42
                        }
                      },
                      "storage": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: storage (actual implementation requires tool adapter)",
                        "params": {
                          "title": "test_title",
                          "description": "test_description",
                          "priority": 42
                        }
                      },
                      "logger": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: logger (actual implementation requires tool adapter)",
                        "params": {
                          "title": "test_title",
                          "description": "test_description",
                          "priority": 42
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "complex-test-agent",
                      "timestamp": "2025-10-03T20:34:42.461298",
                      "tools_executed": [
                        "http",
                        "storage",
                        "logger"
                      ]
                    },
                    "task_id": "task_id_value",
                    "status": "status_value",
                    "created_at": "created_at_value"
                  }
                },
                "errors": [],
                "response_time": 0.0011701583862304688
              },
              {
                "passed": true,
                "verb": "task.get@v1",
                "params": {
                  "task_id": "test_task_id"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "task_id": "test_task_id"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "task_id": "test_task_id"
                        }
                      },
                      "storage": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: storage (actual implementation requires tool adapter)",
                        "params": {
                          "task_id": "test_task_id"
                        }
                      },
                      "logger": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: logger (actual implementation requires tool adapter)",
                        "params": {
                          "task_id": "test_task_id"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "complex-test-agent",
                      "timestamp": "2025-10-03T20:34:42.462422",
                      "tools_executed": [
                        "http",
                        "storage",
                        "logger"
                      ]
                    },
                    "task_id": "task_id_value",
                    "title": "title_value",
                    "description": "description_value",
                    "priority": 0,
                    "status": "status_value",
                    "created_at": "created_at_value"
                  }
                },
                "errors": [],
                "response_time": 0.0010628700256347656
              },
              {
                "passed": true,
                "verb": "task.update@v1",
                "params": {
                  "task_id": "test_task_id",
                  "status": "test_status"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "task_id": "test_task_id",
                      "status": "test_status"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "task_id": "test_task_id",
                          "status": "test_status"
                        }
                      },
                      "storage": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: storage (actual implementation requires tool adapter)",
                        "params": {
                          "task_id": "test_task_id",
                          "status": "test_status"
                        }
                      },
                      "logger": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: logger (actual implementation requires tool adapter)",
                        "params": {
                          "task_id": "test_task_id",
                          "status": "test_status"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "complex-test-agent",
                      "timestamp": "2025-10-03T20:34:42.463512",
                      "tools_executed": [
                        "http",
                        "storage",
                        "logger"
                      ]
                    },
                    "task_id": "task_id_value",
                    "status": "status_value",
                    "updated_at": "updated_at_value"
                  }
                },
                "errors": [],
                "response_time": 0.0010960102081298828
              },
              {
                "passed": true,
                "verb": "task.list@v1",
                "params": {
                  "limit": 42,
                  "offset": 42
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "limit": 42,
                      "offset": 42
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "limit": 42,
                          "offset": 42
                        }
                      },
                      "storage": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: storage (actual implementation requires tool adapter)",
                        "params": {
                          "limit": 42,
                          "offset": 42
                        }
                      },
                      "logger": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: logger (actual implementation requires tool adapter)",
                        "params": {
                          "limit": 42,
                          "offset": 42
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "complex-test-agent",
                      "timestamp": "2025-10-03T20:34:42.464801",
                      "tools_executed": [
                        "http",
                        "storage",
                        "logger"
                      ]
                    },
                    "tasks": [],
                    "total": 0
                  }
                },
                "errors": [],
                "response_time": 0.0012543201446533203
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7067327499389648,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "python_with_tools.pw",
      "stages": {
        "parse": {
          "fixture": "python_with_tools.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='tool-test-agent', lang='python', port=23471, exposes=[ExposeBlock(verb='fetch.data@v1', params=[{'name': 'url', 'type': 'string'}], returns=[{'name': 'status', 'type': 'int'}, {'name': 'data', 'type': 'string'}, {'name': 'cached', 'type': 'bool'}], handler_code=None, prompt_template=None), ExposeBlock(verb='store.item@v1', params=[{'name': 'key', 'type': 'string'}, {'name': 'value', 'type': 'string'}], returns=[{'name': 'stored', 'type': 'bool'}, {'name': 'key', 'type': 'string'}, {'name': 'timestamp', 'type': 'string'}], handler_code=None, prompt_template=None), ExposeBlock(verb='retrieve.item@v1', params=[{'name': 'key', 'type': 'string'}], returns=[{'name': 'found', 'type': 'bool'}, {'name': 'value', 'type': 'string'}, {'name': 'key', 'type': 'string'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=['http', 'storage'], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "python_with_tools.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tool-test-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "python_with_tools.pw",
          "agent_name": "tool-test-agent",
          "port": 23471,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tool-test-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tool-test-agent_server.py",
            "port": 23471,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_fetch_data_v1",
                "handle_store_item_v1",
                "handle_retrieve_item_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90361,
              "errors": [],
              "startup_time": 0.510472297668457
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.367654,
                "timestamp": "2025-10-04T00:34:43.165124+00:00"
              },
              "errors": [],
              "response_time": 0.0011219978332519531
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "fetch.data@v1",
                "params": {
                  "url": "test_url"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "url": "test_url"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "url": "test_url"
                        }
                      },
                      "storage": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: storage (actual implementation requires tool adapter)",
                        "params": {
                          "url": "test_url"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "tool-test-agent",
                      "timestamp": "2025-10-03T20:34:43.166431",
                      "tools_executed": [
                        "http",
                        "storage"
                      ]
                    },
                    "status": 0,
                    "data": "data_value",
                    "cached": true
                  }
                },
                "errors": [],
                "response_time": 0.0012688636779785156
              },
              {
                "passed": true,
                "verb": "store.item@v1",
                "params": {
                  "key": "test_key",
                  "value": "test_value"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "key": "test_key",
                      "value": "test_value"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "key": "test_key",
                          "value": "test_value"
                        }
                      },
                      "storage": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: storage (actual implementation requires tool adapter)",
                        "params": {
                          "key": "test_key",
                          "value": "test_value"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "tool-test-agent",
                      "timestamp": "2025-10-03T20:34:43.167674",
                      "tools_executed": [
                        "http",
                        "storage"
                      ]
                    },
                    "stored": true,
                    "key": "key_value",
                    "timestamp": "timestamp_value"
                  }
                },
                "errors": [],
                "response_time": 0.0013592243194580078
              },
              {
                "passed": true,
                "verb": "retrieve.item@v1",
                "params": {
                  "key": "test_key"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "key": "test_key"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "key": "test_key"
                        }
                      },
                      "storage": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: storage (actual implementation requires tool adapter)",
                        "params": {
                          "key": "test_key"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "tool-test-agent",
                      "timestamp": "2025-10-03T20:34:43.169083",
                      "tools_executed": [
                        "http",
                        "storage"
                      ]
                    },
                    "found": true,
                    "value": "value_value",
                    "key": "key_value"
                  }
                },
                "errors": [],
                "response_time": 0.001249074935913086
              }
            ],
            "overall_passed": true,
            "total_duration": 0.6980407238006592,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "go_minimal.pw",
      "stages": {
        "parse": {
          "fixture": "go_minimal.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='minimal-go-agent', lang='go', port=8080, exposes=[ExposeBlock(verb='greet@v1', params=[{'name': 'name', 'type': 'string'}], returns=[{'name': 'message', 'type': 'string'}, {'name': 'timestamp', 'type': 'int'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=[], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "go_minimal.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-go-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "go_minimal.pw",
          "agent_name": "minimal-go-agent",
          "port": 8080,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-go-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-go-agent_server.py",
            "port": 8080,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_greet_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90380,
              "errors": [],
              "startup_time": 0.516211986541748
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.375995,
                "timestamp": "2025-10-04T00:34:43.871184+00:00"
              },
              "errors": [],
              "response_time": 0.00267791748046875
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "greet@v1",
                "params": {
                  "name": "test_name"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "name": "test_name"
                    },
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "minimal-go-agent",
                      "timestamp": "2025-10-03T20:34:43.873843",
                      "tools_executed": []
                    },
                    "message": "message_value",
                    "timestamp": 0
                  }
                },
                "errors": [],
                "response_time": 0.0023009777069091797
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7005460262298584,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "nodejs_with_tools.pw",
      "stages": {
        "parse": {
          "fixture": "nodejs_with_tools.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='tools-test-agent', lang='nodejs', port=20101, exposes=[ExposeBlock(verb='process.data@v1', params=[{'name': 'input', 'type': 'string'}, {'name': 'format', 'type': 'string'}], returns=[{'name': 'output', 'type': 'string'}, {'name': 'status', 'type': 'string'}, {'name': 'timestamp', 'type': 'int'}], handler_code=None, prompt_template=None), ExposeBlock(verb='health.check@v1', params=[], returns=[{'name': 'healthy', 'type': 'bool'}, {'name': 'uptime', 'type': 'int'}, {'name': 'version', 'type': 'string'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=[], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "nodejs_with_tools.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tools-test-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "nodejs_with_tools.pw",
          "agent_name": "tools-test-agent",
          "port": 20101,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tools-test-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tools-test-agent_server.py",
            "port": 20101,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_process_data_v1",
                "handle_health_check_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90398,
              "errors": [],
              "startup_time": 0.5200300216674805
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.362628,
                "timestamp": "2025-10-04T00:34:44.580668+00:00"
              },
              "errors": [],
              "response_time": 0.0033028125762939453
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "process.data@v1",
                "params": {
                  "input": "test_input",
                  "format": "test_format"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "input": "test_input",
                      "format": "test_format"
                    },
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "tools-test-agent",
                      "timestamp": "2025-10-03T20:34:44.583713",
                      "tools_executed": []
                    },
                    "output": "output_value",
                    "status": "status_value",
                    "timestamp": 0
                  }
                },
                "errors": [],
                "response_time": 0.002749919891357422
              },
              {
                "passed": true,
                "verb": "health.check@v1",
                "params": {},
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {},
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "tools-test-agent",
                      "timestamp": "2025-10-03T20:34:44.586228",
                      "tools_executed": []
                    },
                    "healthy": true,
                    "uptime": 0,
                    "version": "version_value"
                  }
                },
                "errors": [],
                "response_time": 0.002375364303588867
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7129249572753906,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "dotnet_with_tools.pw",
      "stages": {
        "parse": {
          "fixture": "dotnet_with_tools.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='dotnet-http-agent', lang='dotnet', port=5001, exposes=[ExposeBlock(verb='fetch.data@v1', params=[{'name': 'url', 'type': 'string'}], returns=[{'name': 'status', 'type': 'int'}, {'name': 'body', 'type': 'string'}, {'name': 'success', 'type': 'bool'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=['http'], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "dotnet_with_tools.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/dotnet-http-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "dotnet_with_tools.pw",
          "agent_name": "dotnet-http-agent",
          "port": 5001,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/dotnet-http-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/dotnet-http-agent_server.py",
            "port": 5001,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_fetch_data_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90440,
              "errors": [],
              "startup_time": 0.5149590969085693
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.3588,
                "timestamp": "2025-10-04T00:34:45.287535+00:00"
              },
              "errors": [],
              "response_time": 0.002010822296142578
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "fetch.data@v1",
                "params": {
                  "url": "test_url"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "url": "test_url"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "url": "test_url"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "dotnet-http-agent",
                      "timestamp": "2025-10-03T20:34:45.289786",
                      "tools_executed": [
                        "http"
                      ]
                    },
                    "status": 0,
                    "body": "body_value",
                    "success": true
                  }
                },
                "errors": [],
                "response_time": 0.0021278858184814453
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7011079788208008,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "python_minimal.pw",
      "stages": {
        "parse": {
          "fixture": "python_minimal.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='minimal-test-agent', lang='python', port=23470, exposes=[ExposeBlock(verb='health.check@v1', params=[], returns=[{'name': 'status', 'type': 'string'}, {'name': 'uptime', 'type': 'int'}], handler_code=None, prompt_template=None), ExposeBlock(verb='echo.message@v1', params=[{'name': 'message', 'type': 'string'}], returns=[{'name': 'echo', 'type': 'string'}, {'name': 'timestamp', 'type': 'string'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=[], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "python_minimal.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-test-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "python_minimal.pw",
          "agent_name": "minimal-test-agent",
          "port": 23470,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-test-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-test-agent_server.py",
            "port": 23470,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_health_check_v1",
                "handle_echo_message_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90456,
              "errors": [],
              "startup_time": 0.5195839405059814
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.362309,
                "timestamp": "2025-10-04T00:34:45.995466+00:00"
              },
              "errors": [],
              "response_time": 0.0027687549591064453
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "health.check@v1",
                "params": {},
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {},
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "minimal-test-agent",
                      "timestamp": "2025-10-03T20:34:45.998159",
                      "tools_executed": []
                    },
                    "status": "status_value",
                    "uptime": 0
                  }
                },
                "errors": [],
                "response_time": 0.0025620460510253906
              },
              {
                "passed": true,
                "verb": "echo.message@v1",
                "params": {
                  "message": "test_message"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "message": "test_message"
                    },
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "minimal-test-agent",
                      "timestamp": "2025-10-03T20:34:46.000701",
                      "tools_executed": []
                    },
                    "echo": "echo_value",
                    "timestamp": "timestamp_value"
                  }
                },
                "errors": [],
                "response_time": 0.002385854721069336
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7124049663543701,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "dotnet_minimal.pw",
      "stages": {
        "parse": {
          "fixture": "dotnet_minimal.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='minimal-dotnet-agent', lang='dotnet', port=5002, exposes=[ExposeBlock(verb='echo@v1', params=[{'name': 'message', 'type': 'string'}], returns=[{'name': 'echo', 'type': 'string'}, {'name': 'timestamp', 'type': 'string'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=[], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "dotnet_minimal.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-dotnet-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "dotnet_minimal.pw",
          "agent_name": "minimal-dotnet-agent",
          "port": 5002,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-dotnet-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-dotnet-agent_server.py",
            "port": 5002,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_echo_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90459,
              "errors": [],
              "startup_time": 0.5172529220581055
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.371629,
                "timestamp": "2025-10-04T00:34:46.704038+00:00"
              },
              "errors": [],
              "response_time": 0.0028667449951171875
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "echo@v1",
                "params": {
                  "message": "test_message"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "message": "test_message"
                    },
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "minimal-dotnet-agent",
                      "timestamp": "2025-10-03T20:34:46.706997",
                      "tools_executed": []
                    },
                    "echo": "echo_value",
                    "timestamp": "timestamp_value"
                  }
                },
                "errors": [],
                "response_time": 0.0026721954345703125
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7027690410614014,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "rust_with_tools.pw",
      "stages": {
        "parse": {
          "fixture": "rust_with_tools.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='tool-rust-agent', lang='rust', port=9091, exposes=[ExposeBlock(verb='fetch.data@v1', params=[{'name': 'url', 'type': 'string'}], returns=[{'name': 'status', 'type': 'int'}, {'name': 'data', 'type': 'string'}, {'name': 'cached', 'type': 'bool'}], handler_code=None, prompt_template=None), ExposeBlock(verb='process.data@v1', params=[{'name': 'input', 'type': 'string'}, {'name': 'transform', 'type': 'string'}], returns=[{'name': 'output', 'type': 'string'}, {'name': 'success', 'type': 'bool'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=['http'], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "rust_with_tools.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tool-rust-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "rust_with_tools.pw",
          "agent_name": "tool-rust-agent",
          "port": 9091,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tool-rust-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/tool-rust-agent_server.py",
            "port": 9091,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_fetch_data_v1",
                "handle_process_data_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90501,
              "errors": [],
              "startup_time": 0.5164589881896973
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.355893,
                "timestamp": "2025-10-04T00:34:47.409389+00:00"
              },
              "errors": [],
              "response_time": 0.002115964889526367
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "fetch.data@v1",
                "params": {
                  "url": "test_url"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "url": "test_url"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "url": "test_url"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "tool-rust-agent",
                      "timestamp": "2025-10-03T20:34:47.411673",
                      "tools_executed": [
                        "http"
                      ]
                    },
                    "status": 0,
                    "data": "data_value",
                    "cached": true
                  }
                },
                "errors": [],
                "response_time": 0.002213001251220703
              },
              {
                "passed": true,
                "verb": "process.data@v1",
                "params": {
                  "input": "test_input",
                  "transform": "test_transform"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "input": "test_input",
                      "transform": "test_transform"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "input": "test_input",
                          "transform": "test_transform"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "tool-rust-agent",
                      "timestamp": "2025-10-03T20:34:47.413645",
                      "tools_executed": [
                        "http"
                      ]
                    },
                    "output": "output_value",
                    "success": true
                  }
                },
                "errors": [],
                "response_time": 0.0018410682678222656
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7123110294342041,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "rust_minimal.pw",
      "stages": {
        "parse": {
          "fixture": "rust_minimal.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='minimal-rust-agent', lang='rust', port=9090, exposes=[ExposeBlock(verb='health.check@v1', params=[], returns=[{'name': 'status', 'type': 'string'}, {'name': 'uptime', 'type': 'int'}], handler_code=None, prompt_template=None), ExposeBlock(verb='echo.message@v1', params=[{'name': 'message', 'type': 'string'}], returns=[{'name': 'echo', 'type': 'string'}, {'name': 'timestamp', 'type': 'string'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=[], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "rust_minimal.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-rust-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "rust_minimal.pw",
          "agent_name": "minimal-rust-agent",
          "port": 9090,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-rust-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/minimal-rust-agent_server.py",
            "port": 9090,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_health_check_v1",
                "handle_echo_message_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90517,
              "errors": [],
              "startup_time": 0.5157632827758789
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.352828,
                "timestamp": "2025-10-04T00:34:48.123134+00:00"
              },
              "errors": [],
              "response_time": 0.002192974090576172
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "health.check@v1",
                "params": {},
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {},
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "minimal-rust-agent",
                      "timestamp": "2025-10-03T20:34:48.125440",
                      "tools_executed": []
                    },
                    "status": "status_value",
                    "uptime": 0
                  }
                },
                "errors": [],
                "response_time": 0.0021669864654541016
              },
              {
                "passed": true,
                "verb": "echo.message@v1",
                "params": {
                  "message": "test_message"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "message": "test_message"
                    },
                    "tool_results": {},
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "minimal-rust-agent",
                      "timestamp": "2025-10-03T20:34:48.127610",
                      "tools_executed": []
                    },
                    "echo": "echo_value",
                    "timestamp": "timestamp_value"
                  }
                },
                "errors": [],
                "response_time": 0.002089977264404297
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7083923816680908,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    },
    {
      "fixture": "go_with_tools.pw",
      "stages": {
        "parse": {
          "fixture": "go_with_tools.pw",
          "parsed": true,
          "agent": "AgentDefinition(name='go-http-agent', lang='go', port=8081, exposes=[ExposeBlock(verb='fetch.data@v1', params=[{'name': 'url', 'type': 'string'}, {'name': 'method', 'type': 'string'}], returns=[{'name': 'status', 'type': 'int'}, {'name': 'body', 'type': 'string'}, {'name': 'headers', 'type': 'object'}], handler_code=None, prompt_template=None)], calls=[], files=[], llm=None, tools=['http'], memory=None, prompt_template=None, observability=None, temporal=False, workflows=[])",
          "errors": []
        },
        "generate": {
          "fixture": "go_with_tools.pw",
          "generated": true,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/go-http-agent_server.py",
          "errors": []
        },
        "test": {
          "fixture": "go_with_tools.pw",
          "agent_name": "go-http-agent",
          "port": 8081,
          "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/go-http-agent_server.py",
          "tests": {
            "server_path": "/Users/hustlermain/HUSTLER_CONTENT/HSTLR/DEV/Promptware/tests/bidirectional/generated/go-http-agent_server.py",
            "port": 8081,
            "syntax_validation": {
              "valid": true,
              "errors": [],
              "warnings": [],
              "imports_found": [
                "fastapi",
                "fastapi.responses",
                "uvicorn",
                "typing",
                "datetime",
                "time",
                "sys",
                "os",
                "pathlib",
                "logging",
                "traceback",
                "functools",
                "asyncio",
                "datetime",
                "typing",
                "fastapi.middleware.cors",
                "fastapi.middleware.trustedhost",
                "os"
              ],
              "classes_found": [
                "HealthCheck"
              ],
              "functions_found": [
                "handle_errors",
                "validate_params",
                "execute_tool",
                "execute_tools",
                "has_tools",
                "handle_fetch_data_v1",
                "__init__"
              ]
            },
            "server_startup": {
              "started": true,
              "pid": 90561,
              "errors": [],
              "startup_time": 0.5162653923034668
            },
            "health_check": {
              "passed": true,
              "status_code": 200,
              "response": {
                "status": "alive",
                "uptime_seconds": 0.363437,
                "timestamp": "2025-10-04T00:34:48.832549+00:00"
              },
              "errors": [],
              "response_time": 0.002752065658569336
            },
            "verb_tests": [
              {
                "passed": true,
                "verb": "fetch.data@v1",
                "params": {
                  "url": "test_url",
                  "method": "test_method"
                },
                "response": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": {
                    "input_params": {
                      "url": "test_url",
                      "method": "test_method"
                    },
                    "tool_results": {
                      "http": {
                        "ok": true,
                        "version": "v1",
                        "message": "Tool stub: http (actual implementation requires tool adapter)",
                        "params": {
                          "url": "test_url",
                          "method": "test_method"
                        }
                      }
                    },
                    "metadata": {
                      "mode": "ide_integrated",
                      "agent_name": "go-http-agent",
                      "timestamp": "2025-10-03T20:34:48.835500",
                      "tools_executed": [
                        "http"
                      ]
                    },
                    "status": 0,
                    "body": "body_value",
                    "headers": {}
                  }
                },
                "errors": [],
                "response_time": 0.0026979446411132812
              }
            ],
            "overall_passed": true,
            "total_duration": 0.7056381702423096,
            "server_shutdown": {
              "stopped": true,
              "errors": []
            }
          },
          "overall_passed": true
        }
      },
      "passed": true
    }
  ],
  "errors": [],
  "end_time": 1759538089.015414,
  "total_duration": 7.72172212600708
}