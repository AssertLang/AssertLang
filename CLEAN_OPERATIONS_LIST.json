{
  "file.read": {
    "syntax": "file.read(path) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.write": {
    "syntax": "file.write(path, content) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.append": {
    "syntax": "file.append(path, content) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.exists": {
    "syntax": "file.exists(path) -> bool",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.delete": {
    "syntax": "file.delete(path) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.read_lines": {
    "syntax": "file.read_lines(path) -> List<str>",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.write_lines": {
    "syntax": "file.write_lines(path, lines) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.list_dir": {
    "syntax": "file.list_dir(path) -> List<str>",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.mkdir": {
    "syntax": "file.mkdir(path) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.rmdir": {
    "syntax": "file.rmdir(path) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.size": {
    "syntax": "file.size(path) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "file.copy": {
    "syntax": "file.copy(src, dest) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.len": {
    "syntax": "str.len(s) -> int",
    "supported_languages": [
      "javascript",
      "cpp"
    ],
    "language_count": 2
  },
  "str.substring": {
    "syntax": "s[start:end]",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.contains": {
    "syntax": "substring in s",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.starts_with": {
    "syntax": "str.starts_with(s, prefix) -> bool",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.ends_with": {
    "syntax": "str.ends_with(s, suffix) -> bool",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.split": {
    "syntax": "str.split(s, delimiter) -> List<str>",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "str.join": {
    "syntax": "str.join(strings, separator) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "str.trim": {
    "syntax": "str.trim(s) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "str.upper": {
    "syntax": "str.upper(s) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.lower": {
    "syntax": "str.lower(s) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.replace": {
    "syntax": "str.replace(s, old, new) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "str.index_of": {
    "syntax": "str.index_of(s, substring) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "str.reverse": {
    "syntax": "str.reverse(s) -> str",
    "supported_languages": [
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 4
  },
  "str.is_empty": {
    "syntax": "str.is_empty(s) -> bool",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "http.get": {
    "syntax": "http.get(url) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "http.post": {
    "syntax": "http.post(url, body) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "http.get_json": {
    "syntax": "http.get_json(url) -> Map<str, any>",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "http.post_json": {
    "syntax": "http.post_json(url, data) -> Map<str, any>",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "http.download": {
    "syntax": "http.download(url, path) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "url.encode": {
    "syntax": "url.encode(s) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "url.decode": {
    "syntax": "url.decode(s) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "url.parse": {
    "syntax": "url.parse(url) -> Map<str, str>",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "json.parse": {
    "syntax": "json.parse(s) -> any",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "json.stringify": {
    "syntax": "json.stringify(data) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "json.stringify_pretty": {
    "syntax": "json.stringify_pretty(data) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "json.validate": {
    "syntax": "json.validate(s) -> bool",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "math.abs": {
    "syntax": "abs(n) -> number",
    "supported_languages": [
      "go",
      "javascript"
    ],
    "language_count": 2
  },
  "math.min": {
    "syntax": "min(a, b) -> number",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "math.max": {
    "syntax": "max(a, b) -> number",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "math.pow": {
    "syntax": "base ** exp",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "math.sqrt": {
    "syntax": "sqrt(n) -> float",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "math.floor": {
    "syntax": "floor(n) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "math.ceil": {
    "syntax": "ceil(n) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "math.round": {
    "syntax": "round(n) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "math.random": {
    "syntax": "random() -> float",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "math.random_int": {
    "syntax": "random_int(min, max) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "time.now": {
    "syntax": "time.now() -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "time.now_ms": {
    "syntax": "time.now_ms() -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "time.sleep": {
    "syntax": "sleep(seconds) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "time.sleep_ms": {
    "syntax": "sleep_ms(milliseconds) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "time.format": {
    "syntax": "time.format(timestamp, format) -> str",
    "supported_languages": [
      "python",
      "go",
      "javascript"
    ],
    "language_count": 3
  },
  "time.parse": {
    "syntax": "time.parse(date_string, format) -> int",
    "supported_languages": [
      "python",
      "go",
      "javascript"
    ],
    "language_count": 3
  },
  "time.now_iso": {
    "syntax": "time.now_iso() -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "time.add_days": {
    "syntax": "time.add_days(timestamp, days) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "process.run": {
    "syntax": "process.run(cmd) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "env.get": {
    "syntax": "env.get(key) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "env.set": {
    "syntax": "env.set(key, value) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "process.exit": {
    "syntax": "exit(code) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "process.cwd": {
    "syntax": "process.cwd() -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "process.chdir": {
    "syntax": "process.chdir(path) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "array.len": {
    "syntax": "len(arr) -> int",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "array.push": {
    "syntax": "arr.push(item) -> void",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "array.pop": {
    "syntax": "arr.pop() -> any",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "array.contains": {
    "syntax": "item in arr",
    "supported_languages": [
      "python",
      "rust",
      "javascript",
      "cpp"
    ],
    "language_count": 4
  },
  "array.index_of": {
    "syntax": "arr.index_of(item) -> int",
    "supported_languages": [
      "python",
      "rust",
      "javascript",
      "cpp"
    ],
    "language_count": 4
  },
  "array.slice": {
    "syntax": "arr[start:end]",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "array.reverse": {
    "syntax": "arr.reverse() -> array",
    "supported_languages": [
      "python",
      "rust",
      "javascript",
      "cpp"
    ],
    "language_count": 4
  },
  "array.sort": {
    "syntax": "sorted(arr) -> array",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "base64.encode": {
    "syntax": "base64.encode(data) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "base64.decode": {
    "syntax": "base64.decode(encoded) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "hex.encode": {
    "syntax": "hex.encode(data) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "hex.decode": {
    "syntax": "hex.decode(encoded) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "hash.md5": {
    "syntax": "hash.md5(data) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "hash.sha256": {
    "syntax": "hash.sha256(data) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript"
    ],
    "language_count": 4
  },
  "type.str": {
    "syntax": "str(value) -> str",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "type.int": {
    "syntax": "int(s) -> int",
    "supported_languages": [
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 4
  },
  "type.float": {
    "syntax": "float(s) -> float",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "type.bool": {
    "syntax": "bool(s) -> bool",
    "supported_languages": [
      "python",
      "rust",
      "go",
      "javascript",
      "cpp"
    ],
    "language_count": 5
  },
  "type.is_string": {
    "syntax": "typeof(value) == \"string\"",
    "supported_languages": [
      "python",
      "javascript"
    ],
    "language_count": 2
  },
  "type.is_int": {
    "syntax": "typeof(value) == \"int\"",
    "supported_languages": [
      "python",
      "javascript"
    ],
    "language_count": 2
  },
  "type.is_float": {
    "syntax": "typeof(value) == \"float\"",
    "supported_languages": [
      "python",
      "javascript"
    ],
    "language_count": 2
  },
  "type.is_bool": {
    "syntax": "typeof(value) == \"bool\"",
    "supported_languages": [
      "python",
      "javascript"
    ],
    "language_count": 2
  }
}