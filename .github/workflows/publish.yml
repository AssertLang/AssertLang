name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead'
        required: false
        type: boolean
        default: false

jobs:
  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: for trusted publishing
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check distribution
      run: |
        ls -lh dist/
        twine check dist/*

    - name: Publish to Test PyPI
      if: github.event.inputs.test_pypi == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true

    - name: Publish to PyPI
      if: github.event_name == 'release' && github.event.inputs.test_pypi != 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Upload release artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: release-dist
        path: dist/

  verify-publish:
    name: Verify PyPI Publication
    needs: publish
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - name: Wait for PyPI to update
      run: sleep 60

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install from PyPI
      run: |
        pip install assertlang --upgrade
        asl --version

    - name: Verify installation
      run: |
        python -c "import assertlang; print(f'âœ… AssertLang {assertlang.__version__} published successfully')"

  create-github-release:
    name: Update GitHub Release
    needs: verify-publish
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-dist
        path: dist/

    - name: Upload artifacts to GitHub Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release upload ${{ github.event.release.tag_name }} dist/*
