name: Test Suite

on:
  push:
    branches: [ main, master, develop, CC* ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0'

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: |
          .venv
          ~/.cache/pip
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install Python dependencies
      run: |
        python -m venv .venv
        . .venv/bin/activate
        pip install --upgrade pip
        pip install -e ".[dev]"
        pip install pytest pytest-xdist

    - name: Verify multi-language runtimes
      run: |
        python --version
        node --version
        go version
        cargo --version
        dotnet --version

    - name: Run test batches
      run: |
        . .venv/bin/activate
        make test-batches

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          .pytest_cache
          **/*.log

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m venv .venv
        . .venv/bin/activate
        pip install --upgrade pip
        pip install ruff black

    - name: Run linter
      run: |
        . .venv/bin/activate
        ruff check promptware cli daemon language runners sdks --ignore E501,E722,E702,F811,E402,E741

    - name: Check formatting
      run: |
        . .venv/bin/activate
        black --check daemon runners cli tests